- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: Remove rook directory
  file:
    path: /var/lib/rook
    state: absent

- set_fact:
    master_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: |
    kubeadm init --kubernetes-version {{ kubernetes_version }} \
                 --control-plane-endpoint {{ control_plane_endpoint }} \
                 --pod-network-cidr={{ pod_cidr }} \
                 --apiserver-advertise-address {{ master_ip }} \
                 --apiserver-cert-extra-sans "kubernetes.local,{{ control_plane_endpoint }}"
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: Deploy calico pod networking
  when: init_cluster is succeeded
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
  register: create_result
  until: create_result.rc == 0
  ignore_errors: true

- name: Enable scheduling on master node
  when: init_cluster is succeeded
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
      taint nodes --all node-role.kubernetes.io/master-
  register: create_result
  until: create_result.rc == 0
  ignore_errors: true

- name: Deploy Rook and Ceph CRDs 1.3
  when: init_cluster is succeeded
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        apply -f https://raw.githubusercontent.com/rook/rook/release-1.3/cluster/examples/kubernetes/ceph/common.yaml
  register: create_result
  until: create_result.rc == 0
  ignore_errors: true

- name: Deploy Rook and Ceph Operator 1.3
  when: init_cluster is succeeded
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        apply -f https://raw.githubusercontent.com/rook/rook/release-1.3/cluster/examples/kubernetes/ceph/operator.yaml
  register: create_result
  until: create_result.rc == 0
  ignore_errors: true

- name: Install linkerd CLI
  when: init_cluster is succeeded
  shell: "curl -sL https://run.linkerd.io/install | sh"

- name: Deploy linkerd service mesh
  when: init_cluster is succeeded
  shell: "$HOME/.linkerd2/bin/linkerd  --kubeconfig={{ kubeadmin_config }} install | kubectl apply --kubeconfig={{ kubeadmin_config }} -f -"

- name: Check linkerd service mesh
  when: init_cluster is succeeded
  command: "$HOME/.linkerd2/bin/linkerd --kubeconfig={{ kubeadmin_config }} check"